{"ast":null,"code":"export const pathFromBezierCurve = cubicBezierCurve => {\n  const initialAxis = cubicBezierCurve.initialAxis,\n        initialControlPoint = cubicBezierCurve.initialControlPoint,\n        endingControlPoint = cubicBezierCurve.endingControlPoint,\n        endingAxis = cubicBezierCurve.endingAxis;\n  return \"\\n      M\".concat(initialAxis.x, \" \").concat(initialAxis.y, \"\\n      c \").concat(initialControlPoint.x, \" \").concat(initialControlPoint.y, \"\\n      \").concat(endingControlPoint.x, \" \").concat(endingControlPoint.y, \"\\n      \").concat(endingAxis.x, \" \").concat(endingAxis.y, \"\\n    \");\n};\nexport const radiansToDegrees = radians => radians * 180 / Math.PI; // https://math.stackexchange.com/questions/714378/find-the-angle-that-creating-with-y-axis-in-degrees\n\nexport const calculateAngle = (x1, y1, x2, y2) => {\n  if (x2 >= 0 && y2 >= 0) {\n    return 90;\n  } else if (x2 < 0 && y2 >= 0) {\n    return -90;\n  }\n\n  const dividend = x2 - x1;\n  const divisor = y2 - y1;\n  const quotient = dividend / divisor;\n  return radiansToDegrees(Math.atan(quotient)) * -1;\n};\nexport const getCanvasPosition = event => {\n  // mouse position on auto-scaling canvas\n  // https://stackoverflow.com/a/10298843/1232793\n  const svg = document.getElementById('aliens-go-home-canvas');\n  const point = svg.createSVGPoint();\n  point.x = event.clientX;\n  point.y = event.clientY;\n\n  const _point$matrixTransfor = point.matrixTransform(svg.getScreenCTM().inverse()),\n        x = _point$matrixTransfor.x,\n        y = _point$matrixTransfor.y;\n\n  return {\n    x,\n    y\n  };\n};","map":{"version":3,"sources":["/Users/Rightdan/git/aliens-go-home/src/utils/formulas.js"],"names":["pathFromBezierCurve","cubicBezierCurve","initialAxis","initialControlPoint","endingControlPoint","endingAxis","x","y","radiansToDegrees","radians","Math","PI","calculateAngle","x1","y1","x2","y2","dividend","divisor","quotient","atan","getCanvasPosition","event","svg","document","getElementById","point","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAIC,gBAAD,IAAsB;AAAA,QAEnDC,WAFmD,GAGjDD,gBAHiD,CAEnDC,WAFmD;AAAA,QAEtCC,mBAFsC,GAGjDF,gBAHiD,CAEtCE,mBAFsC;AAAA,QAEjBC,kBAFiB,GAGjDH,gBAHiD,CAEjBG,kBAFiB;AAAA,QAEGC,UAFH,GAGjDJ,gBAHiD,CAEGI,UAFH;AAIrD,4BACKH,WAAW,CAACI,CADjB,cACsBJ,WAAW,CAACK,CADlC,uBAEMJ,mBAAmB,CAACG,CAF1B,cAE+BH,mBAAmB,CAACI,CAFnD,qBAGIH,kBAAkB,CAACE,CAHvB,cAG4BF,kBAAkB,CAACG,CAH/C,qBAIIF,UAAU,CAACC,CAJf,cAIoBD,UAAU,CAACE,CAJ/B;AAMD,CAVI;AAYP,OAAO,MAAMC,gBAAgB,GAAGC,OAAO,IAAMA,OAAO,GAAG,GAAX,GAAkBC,IAAI,CAACC,EAA5D,C,CAEP;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,KAAoB;AAChD,MAAID,EAAE,IAAI,CAAN,IAAWC,EAAE,IAAI,CAArB,EAAwB;AACtB,WAAO,EAAP;AACD,GAFD,MAEO,IAAID,EAAE,GAAG,CAAL,IAAUC,EAAE,IAAI,CAApB,EAAuB;AAC5B,WAAO,CAAC,EAAR;AACD;;AAED,QAAMC,QAAQ,GAAGF,EAAE,GAAGF,EAAtB;AACA,QAAMK,OAAO,GAAGF,EAAE,GAAGF,EAArB;AACA,QAAMK,QAAQ,GAAGF,QAAQ,GAAGC,OAA5B;AACA,SAAOV,gBAAgB,CAACE,IAAI,CAACU,IAAL,CAAUD,QAAV,CAAD,CAAhB,GAAwC,CAAC,CAAhD;AACD,CAXM;AAaP,OAAO,MAAME,iBAAiB,GAAIC,KAAD,IAAW;AAC1C;AACA;AAEA,QAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,CAAZ;AACA,QAAMC,KAAK,GAAGH,GAAG,CAACI,cAAJ,EAAd;AAEAD,EAAAA,KAAK,CAACpB,CAAN,GAAUgB,KAAK,CAACM,OAAhB;AACAF,EAAAA,KAAK,CAACnB,CAAN,GAAUe,KAAK,CAACO,OAAhB;;AAR0C,gCASzBH,KAAK,CAACI,eAAN,CAAsBP,GAAG,CAACQ,YAAJ,GAAmBC,OAAnB,EAAtB,CATyB;AAAA,QASlC1B,CATkC,yBASlCA,CATkC;AAAA,QAS/BC,CAT+B,yBAS/BA,CAT+B;;AAU1C,SAAO;AAACD,IAAAA,CAAD;AAAIC,IAAAA;AAAJ,GAAP;AACD,CAXM","sourcesContent":["export const pathFromBezierCurve = (cubicBezierCurve) => {\n    const {\n      initialAxis, initialControlPoint, endingControlPoint, endingAxis,\n    } = cubicBezierCurve;\n    return `\n      M${initialAxis.x} ${initialAxis.y}\n      c ${initialControlPoint.x} ${initialControlPoint.y}\n      ${endingControlPoint.x} ${endingControlPoint.y}\n      ${endingAxis.x} ${endingAxis.y}\n    `;\n  };\n\nexport const radiansToDegrees = radians => ((radians * 180) / Math.PI);\n\n// https://math.stackexchange.com/questions/714378/find-the-angle-that-creating-with-y-axis-in-degrees\nexport const calculateAngle = (x1, y1, x2, y2) => {\n  if (x2 >= 0 && y2 >= 0) {\n    return 90;\n  } else if (x2 < 0 && y2 >= 0) {\n    return -90;\n  }\n\n  const dividend = x2 - x1;\n  const divisor = y2 - y1;\n  const quotient = dividend / divisor;\n  return radiansToDegrees(Math.atan(quotient)) * -1;\n};\n\nexport const getCanvasPosition = (event) => {\n  // mouse position on auto-scaling canvas\n  // https://stackoverflow.com/a/10298843/1232793\n\n  const svg = document.getElementById('aliens-go-home-canvas');\n  const point = svg.createSVGPoint();\n\n  point.x = event.clientX;\n  point.y = event.clientY;\n  const { x, y } = point.matrixTransform(svg.getScreenCTM().inverse());\n  return {x, y};\n};"]},"metadata":{},"sourceType":"module"}